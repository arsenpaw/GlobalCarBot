import logging

import sqlite3

from aiogram.filters import CommandStart
from Handlers.callback_user_chose_car import CallbackDataHolder
from aiogram.types import Message, InputFile, FSInputFile
from aiogram import Bot, Dispatcher, F, Router
from keyboards import start_keyboard
from aiogram.fsm.context import FSMContext
from database.database_methods import *
from methods.user_filter_to_db import *
from filters.admin_filters import *



router = Router()
router.message.filter(ChatTypeFilter(["private"]))




@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    logging.info("/command start")
    await message.answer(f"<b>–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name} !</b>\n"
                         f"–¶–µ —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó Global Car üöòüá∫üá∏ \n"
                         f"–ú–∏ –∑–∞–π–º–∞—î–º–æ—Å—å –¥–æ—Å—Ç–∞–≤–∫–æ—é –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤ –±—É–¥—å-—è–∫—É —Ç–æ—á–∫—É –£–∫—Ä–∞—ó–Ω–∏ üá∫üá¶\n"
                         f"‚¨áÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É ‚¨áÔ∏è",
                         reply_markup=start_keyboard.start_kb)

@router.message(BotStates.main_menu)
@router.message(F.text.lower() == '–≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
async def back_to_menu(message: Message,state:FSMContext):
    await state.clear()
    logging.info("/main menu command")
    await message.answer('‚¨áÔ∏è–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é, –≤–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É.‚¨áÔ∏è', reply_markup=start_keyboard.start_kb)

@router.message(BotStates.contact_with_manager)
@router.message(F.text.lower() == '–∑–≤—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º')
async def connect_to_manager(message: Message,state:FSMContext):
    logging.info("connect_to_manager")
    await state.clear()
    await state.set_state(BotStates.contact_with_manager)
    try:
        dict_user_info = await get_basic_info(message)
    except Exception as ex:
        logging.error(f'ERROR IN PARSING 1 BUTTON, {ex}')
    try:
        with sqlite3.connect("database/clients.db") as db:
            cur = db.cursor()
            query = (""" INSERT INTO CertainCar
                    (client_id,client_name,car_to_find,client_phone,time)
                    VALUES (?, ?, ?,?,?)
                    """)
            await state.update_data(contact_with_manager = message.text)
            dict_data = await state.get_data()
            if CallbackDataHolder.get_callback_data() is not None:
                values = (dict_user_info['user_id'], dict_user_info['user_name'], CallbackDataHolder.get_callback_data(),
                          dict_user_info['phone_number'],
                          dict_user_info['time'])

            else:
              values = (dict_user_info['user_id'], dict_user_info['user_name'], '–ó–≤—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é', dict_user_info['phone_number'],
                          dict_user_info['time'])
            cur.execute(query, values)
            db.commit()
    except Exception as ex:
        logging.error(f'ERROR IN FIRST BUTTON  DB, {ex}')
    finally:
        CallbackDataHolder.clear_callback_data()
        result = await is_object_added(cur)
        await send_status_to_user(message, result)
        await message.answer("–í–µ—Ä–Ω—ñ—Ç—å—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", reply_markup=start_keyboard.back_bome_kb)

